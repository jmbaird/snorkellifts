/* Source and licensing information for the line(s) below can be found at http://snorkellifts.com/modules/contrib/geofield_map/js/geojson.js. */
(function(o,e){"use strict";e.googleGeoJson=function(o,e){let _geometryToGoogleMaps=function(o,e,t){let googleObj;let bounds;let paths=[];let path=[];let i;let j;let k;let coord;let ll;switch(o.type){case"Point":e.position=new google.maps.LatLng(o.coordinates[1],o.coordinates[0]);bounds=new google.maps.LatLngBounds();bounds.extend(e.position);googleObj=new google.maps.Marker(e);googleObj.set("bounds",bounds);if(t){googleObj.set("geojsonProperties",t)};break;case"MultiPoint":googleObj=[];bounds=new google.maps.LatLngBounds();for(i=0;i<o.coordinates.length;i++){e.position=new google.maps.LatLng(o.coordinates[i][1],o.coordinates[i][0]);bounds.extend(e.position);googleObj.push(new google.maps.Marker(e))};if(t){for(k=0;k<googleObj.length;k++){googleObj[k].set("geojsonProperties",t)}};for(k=0;k<googleObj.length;k++){googleObj[k].set("bounds",bounds)};break;case"LineString":bounds=new google.maps.LatLngBounds();path=[];for(i=0;i<o.coordinates.length;i++){coord=o.coordinates[i];ll=new google.maps.LatLng(coord[1],coord[0]);bounds.extend(ll);path.push(ll)};e.path=path;googleObj=new google.maps.Polyline(e);googleObj.set("bounds",bounds);if(t){googleObj.set("geojsonProperties",t)};break;case"MultiLineString":googleObj=[];bounds=new google.maps.LatLngBounds();for(i=0;i<o.coordinates.length;i++){path=[];for(j=0;j<o.coordinates[i].length;j++){coord=o.coordinates[i][j];ll=new google.maps.LatLng(coord[1],coord[0]);bounds.extend(ll);path.push(ll)};e.path=path;googleObj.push(new google.maps.Polyline(e))};if(t){for(k=0;k<googleObj.length;k++){googleObj[k].set("geojsonProperties",t)}};for(k=0;k<googleObj.length;k++){googleObj[k].set("bounds",bounds)};break;case"Polygon":paths=[];bounds=new google.maps.LatLngBounds();for(i=0;i<o.coordinates.length;i++){path=[];for(j=0;j<o.coordinates[i].length;j++){ll=new google.maps.LatLng(o.coordinates[i][j][1],o.coordinates[i][j][0]);bounds.extend(ll);path.push(ll)};paths.push(path)};e.paths=paths;googleObj=new google.maps.Polygon(e);googleObj.set("bounds",bounds);if(t){googleObj.set("geojsonProperties",t)};break;case"MultiPolygon":googleObj=[];bounds=new google.maps.LatLngBounds();for(i=0;i<o.coordinates.length;i++){paths=[];for(j=0;j<o.coordinates[i].length;j++){path=[];for(k=0;k<o.coordinates[i][j].length;k++){ll=new google.maps.LatLng(o.coordinates[i][j][k][1],o.coordinates[i][j][k][0]);bounds.extend(ll);path.push(ll)};paths.push(path)};e.paths=paths;googleObj.push(new google.maps.Polygon(e))};if(t){for(k=0;k<googleObj.length;k++){googleObj[k].set("geojsonProperties",t)}};for(k=0;k<googleObj.length;k++){googleObj[k].set("bounds",bounds)};break;case"GeometryCollection":googleObj=[];if(!o.geometries){googleObj=_error("Invalid GeoJSON object: GeometryCollection object missing 'geometries' member.")}
else{for(i=0;i<o.geometries.length;i++){googleObj.push(_geometryToGoogleMaps(o.geometries[i],e,t||null))}};break;default:googleObj=_error("Invalid GeoJSON object: Geometry object must be one of 'Point', 'LineString', 'Polygon' or 'MultiPolygon'.")};return googleObj};let _error=function(o){return{type:"Error",message:o}};let obj;let opts=e||{};switch(o.type){case"FeatureCollection":if(!o.features){obj=_error("Invalid GeoJSON object: FeatureCollection object missing 'features' member.")}
else{obj=[];for(let y=0;y<o.features.length;y++){obj.push(_geometryToGoogleMaps(o.features[y].geometry,opts,o.features[y].properties))}};break;case"GeometryCollection":if(!o.geometries){obj=_error("Invalid GeoJSON object: GeometryCollection object missing 'geometries' member.")}
else{obj=[];for(let z=0;z<o.geometries.length;z++){obj.push(_geometryToGoogleMaps(o.geometries[z],opts,o.geometries[z].properties))}};break;case"Feature":if(!(o.properties&&o.geometry)){obj=_error("Invalid GeoJSON object: Feature object missing 'properties' or 'geometry' member.")}
else{obj=_geometryToGoogleMaps(o.geometry,opts,o.properties)};break;case"Point":case"MultiPoint":case"LineString":case"MultiLineString":case"Polygon":case"MultiPolygon":obj=o.coordinates?obj=_geometryToGoogleMaps(o,opts,o.properties):_error("Invalid GeoJSON object: Geometry object missing 'coordinates' member.");break;default:obj=_error("Invalid GeoJSON object: GeoJSON object must be one of 'Point', 'LineString', 'Polygon', 'MultiPolygon', 'Feature', 'FeatureCollection' or 'GeometryCollection'.")};return obj}})(jQuery,Drupal);
/* Source and licensing information for the above line(s) can be found at http://snorkellifts.com/modules/contrib/geofield_map/js/geojson.js. */